}
temp_convert(30, 'celsius')
temp_convert <- function(x = 1, to = "celsius") {
to=tolower(to)
switch(to,
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
temp_convert(30, 'celsius')
temp_convert(30, 'celsius')
temp_convert(30, 'Celsius')
temp_convert(30, 'CELSIUS')
temp_convert <- function(x = 1, to = "celsius") {
to <- tolower(to)
switch(to,
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
temp_convert(30, 'celsius')
temp_convert(30, 'Celsius')
temp_convert(30, 'CELSIUS')
to=tolower(to)
switch(to,
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
temp_convert(30, 'celsius')
paste("file",1:10,".csv")
paste("file",1:10,".csv",sep="")
paste("file",1:10,".csv",sep="")
paste0("file",1:10,".csv")
paste("file",1:10,".csv",collapse="")
paste("file",1:10,".csv",sep="")
paste0("file",1:10,".csv")
result <- rep("",10)
for (i in 1:10){
result[i] <- paste("file",i,".csv",collapse = "")
}
result
i
paste("file",i,".csv",collapse = "")
paste("file",i,".csv",collapse ="")
paste("file",i,".csv",collapse =" ")
paste0("file",i,".csv")
paste("file",1:10,".csv",sep="")
paste0("file",1:10,".csv")
result <- rep("",10)
for (i in 1:10){
result[i] <- paste0("file",i,".csv")
}
result
b <- "hello"
b
substr(b,1,3)
substr(b,1,3) <- "l"
b
substr(b,1,3) <- "loop"
b
result
nchar(result)
substr(result,5,nchar(result))
result <- paste0("dataset",substr(result,5,nchar(result)))
result
getwd()
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("This is the first line", file = outfile)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
cat("This is the first line", file = outfile)
cat("This is the first line", file = outfile)
cat("\n h", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
cat("This is the first line", file = outfile)
cat("\nh", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
cat("This is the first line", file = outfile)
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
outfile <- "output.txt"
cat("---",file = outfile)
cat("title: "Some title"",file = outfile, append = TRUE)
cat("author: "Your name"",file = outfile, append = TRUE)
cat("date: "today's date"",file = outfile, append = TRUE)
cat("output: html_document",file = outfile, append = TRUE)
cat("---",file = outfile, append = TRUE)
cat("This is the first line", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
outfile <- "output.txt"
cat("---",file = outfile)
cat("\n", file = outfile, append = TRUE)
cat("title: "Some title"",file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("author: "Your name"",file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("date: "today's date"",file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("output: html_document",file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("---",file = outfile, append = TRUE)
cat("This is the first line", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
outfile <- "output.txt"
cat("---",file = outfile)
cat("\n", file = outfile, append = TRUE)
cat("title: "Some title"",file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("author: "Your name"",file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("date: "today's date"",file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("output: html_document",file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("---",file = outfile, append = TRUE)
outfile <- "output.txt"
cat("---",file = outfile)
outfile <- "output.txt"
cat("---",file = outfile)
cat("title: "Some title\n"",file = outfile, append = TRUE)
cat("title: "Some title"\n",file = outfile, append = TRUE)
cat("title: "lab10"\n",file = outfile, append = TRUE)
cat("title: "lab10"", file = outfile, append = TRUE)
cat("title: lab10", file = outfile, append = TRUE)
outfile <- "output.txt"
cat("---\n",file = outfile)
cat("title: lab10", file = outfile, append = TRUE)
outfile <- "output.txt"
cat("---\n",file = outfile)
cat("title: lab10\n", file = outfile, append = TRUE)
cat("author: Edward Zamora\n",file = outfile, append = TRUE)
cat("date: 11/02/2017\n",file = outfile, append = TRUE)
cat("output: html_document\n",file = outfile, append = TRUE)
cat("---\n\n",file = outfile, append = TRUE)
outfile <- "output.txt"
cat("---\n",file = outfile)
cat("title: lab10\n", file = outfile, append = TRUE)
cat("author: Edward Zamora\n",file = outfile, append = TRUE)
cat("date: 11/02/2017\n",file = outfile, append = TRUE)
cat("output: html_document\n",file = outfile, append = TRUE)
cat("---\n\n",file = outfile, append = TRUE)
cat("This is the first line", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
colors
colors()
colors()=='yellow'
sum(colors()=='yellow')
is_color <- function(x){
if (sum(colors()==x)!=0){
return(TRUE)
}
return(FALSE)
}
is_color('yellow')
is_color('blu')
is_color('turkuoise')
is_color <- function(x){
if (sum(colors()==x)!=0){
return(TRUE)
}
return(FALSE)
}
is_color('yellow')  # TRUE
is_color('blu')     # FALSE
is_color('turkuoise') # FALSE
plot(rnorm())
plot(rnorm(1))
plot(rnorm(3))
plot(rnorm(100))
?plot
plot(rnorm(100))
points(col="red")
?plot
plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"s\")")
points(x, cex = .5, col = "dark red")
plot(x <- sort(rnorm(47)), main = "plot(x, type = \"s\")")
points(x, cex = .5, col = "dark red")
x
plot(sort(rnorm(47)), main = "plot(x, type = \"s\")")
points(x, cex = .5, col = "dark red")
plot(sort(rnorm(47)), main = "plot(x, type = \"s\")")
points(x, cex = .5, col = "dark red")
rnorm(5)
rnorm(5)
rnorm(5)
rnorm(5)
colplot <- function(x){
if (is_color(x)){
plot(a <- rnorm(100), main = paste("Testing color",x))
points(a,col = x)
}
stop(paste("invalid color",x))
}
colplot('red')
is_color("red")
is_color('red')
colplot <- function(x){
if (is_color(x)){
plot(a <- rnorm(100), main = paste("Testing color",x))
points(a,col = x)
}else{
stop(paste("invalid color",x))
}
}
colplot('red')
colplot('tomato')
colplot('tomate')
colplot('blue')
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
letrs
table(letrs)
vowels <- c('a','e','i','o','u')
letrs==vowels
letrs[letrs==vowels]
'a'==vowels
letrs
letrs[letrs==vowels]
table(letrs)
table(letrs)[1]
names(table(letrs)[1])
names(table(letrs))
names(table(letrs))==vowels
setdiff(vowels,letrs)
setdiff(letrs,vowels)
letrs[(letrs%in%vowels)]
table(letrs[(letrs%in%vowels)])
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
vowels <- c('a','e','i','o','u')
vowcount <- table(letrs[(letrs%in%vowels)])
vowcount
conscount <- table(letrs[!(letrs%in%vowels)])
conscount
sum((letrs%in%vowels))
sum(!(letrs%in%vowels))
count_letters <- function(x){
vowels <- c('a','e','i','o','u')
v <- sum((x%in%vowels))
c <- sum(!(x%in%vowels))
print(paste("letters:",v+c))
print(paste("vowels:",v))
print(paste("consonants:",c))
}
count_letters(letrs)
letrs*2
letrs
rep(letrs,2)
count_letters(rep(letrs,3))
substr(states, num_chars-2, num_chars)
paste0(substr(states,1,1),substr(states, num_chars-2, num_chars))
head(USArrests)
states <- rownames(USArrests)
head(states)
nchar(states)
tolower(states)
toupper(states)
casefold(states,upper=FALSE)
casefold(states,upper=TRUE)
num_chars <- nchar(states)
num_chars
char_freqs = table(num_chars)
char_freqs
barplot(char_freqs)
paste(states[1:5],num_chars[1:5],sep = " = ")
paste(states[1:5],collapse = '')
substr(states, num_chars-2, num_chars)
paste0(substr(states,1,1),substr(states, num_chars-2, num_chars))
states_list <- list()
index <- 0
for (n in 1:length(char_freqs)){
state <- states[num_chars==names(char_freqs)[n]]
if (nchar(state[1])%%2==0){
statec <- paste(toupper(state), collapse = ", ")
}else{
statec <- paste(tolower(state), collapse = ", ")
}
name <- paste0(names(char_freqs)[n], "-chars")
states_list[[name]] <- statec
}
states_list
to_celsius <- function(x = 1) {
(x - 32) * (5/9)
}
to_kelvin <- function(x = 1) {
(x + 459.67) * (5/9)
}
to_reaumur <- function(x = 1) {
(x - 32) * (4/9)
}
to_rankine <- function(x = 1) {
x + 459.67
}
temp_convert <- function(x = 1, to = "celsius") {
to <- tolower(to)
switch(to,
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
temp_convert(30, 'celsius')
temp_convert(30, 'Celsius')
temp_convert(30, 'CELSIUS')
paste("file",1:10,".csv",sep="")
paste0("file",1:10,".csv")
result <- rep("",10)
for (i in 1:10){
result[i] <- paste0("file",i,".csv")
}
result
result <- paste0("dataset",substr(result,5,nchar(result)))
result
outfile <- "output.txt"
cat("---\n",file = outfile)
cat("title: lab10\n", file = outfile, append = TRUE)
cat("author: Edward Zamora\n",file = outfile, append = TRUE)
cat("date: 11/02/2017\n",file = outfile, append = TRUE)
cat("output: html_document\n",file = outfile, append = TRUE)
cat("---\n\n",file = outfile, append = TRUE)
cat("This is the first line", file = outfile, append = TRUE)
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
is_color <- function(x){
if (sum(colors()==x)!=0){
return(TRUE)
}
return(FALSE)
}
is_color('yellow')  # TRUE
is_color('blu')     # FALSE
is_color('turkuoise') # FALSE
colplot <- function(x){
if (is_color(x)){
plot(a <- rnorm(100), main = paste("Testing color",x))
points(a,col = x)
}else{
stop(paste("invalid color",x))
}
}
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
vowels <- c('a','e','i','o','u')
vowcount <- table(letrs[(letrs%in%vowels)])
vowcount
conscount <- table(letrs[!(letrs%in%vowels)])
conscount
count_letters <- function(x){
vowels <- c('a','e','i','o','u')
v <- sum((x%in%vowels))
c <- sum(!(x%in%vowels))
print(paste("letters:",v+c))
print(paste("vowels:",v))
print(paste("consonants:",c))
}
count_letters(letrs)
dat
dat <- read.csv("../data/cleandata/cleanscores.csv")
dat <- read.csv("stat133/stat133-hws-fall17/hw04/data/cleandata/cleanscores.csv")
library(shiny); runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
source("../code/functions.r")
runApp('stat133/stat133-hws-fall17/hw04/code/functions.r')
source("stat133/stat133-hws-fall17/hw04/code/functions.r")
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
library(shiny)
library(ggvis)
source("../code/functions.r")
dat <- read.csv("../data/cleandata/cleanscores.csv")
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
compute_tabulate(dat$Grade)
dat$Grade
as.character(dat$Grade)
compute_tabulate(as.character(dat$Grade))
compute_tabulate(dat$Grade)
?compute_tabulate
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
as.data.frame(table(dat$Grade))
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
s <- as.data.frame(table(dat$Grade))
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
?layer_model_predictions
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
?layer_model_predictions
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
as.data.frame(table(dat$Grade))
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
as.data.frame(table(dat$Grade))
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
as.data.frame(table(dat$Grade))
data <- as.data.frame(table(dat$Grade))
names(data) <- c("Grades","Frequency")
data
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
?layer_model_predictions
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
histogram <- dat %>%
ggvis(x = xvar,y=yvar,opacity:=1) %>%
layer_points()%>%
layer_model_predictions(model = 'lm',opacity:=1,stroke:='red')
xvar <- prop("x", as.symbol('HW1'))
yvar <- prop("y", as.symbol('HW2'))
histogram <- dat %>%
ggvis(x = xvar,y=yvar,opacity:=1) %>%
layer_points()%>%
layer_model_predictions(model = 'lm',opacity:=1,stroke:='red')
histogram <- dat %>%
ggvis(x = xvar,y=yvar,opacity:=1) %>%
layer_points()%>%
layer_model_predictions(model = 'lm',opacity:=1,stroke:='red')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
?layer_model_predictions
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('stat133/stat133-hws-fall17/hw04/app/gradevis.R')
